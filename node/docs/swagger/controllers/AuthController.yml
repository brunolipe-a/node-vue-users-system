/v1/login:
  post:
    tags:
      - Login
    summary: Login a user
    description: Login a user, get bearer token
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - email
              - password
            properties:
              email:
                type: string
                description: Users email
                example: admin@admin.admin
              password:
                type: integer
                description: User's password
                example: '123456'
    produces:
      - application/json
    responses:
      200:
        description: Get token
        content:
          application/json:
            schema:
              properties:
                type:
                  type: sting
                  description: Token type
                  example: Bearer
                token:
                  type: sting
                  description: Token
                  example: Y2tpejNvZWljMDAwMHg2bGgwdXh4aGdlZQ.gX2pd7zHYKAdOCl17mJd9PJWRZsN_52zxz0HDnrLNi4_lqy3NT3iqxRa5LWz
      400:
        description: authentication failed

/v1/register:
  post:
    tags:
      - Register
    summary: Register a new user
    description: Register new user
    requestBody:
      required: true
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/definitions/schemas/UserWithoutId"
              - type: object
              - properties:
                  password_confirmation:
                    type: integer
                    description: The user password confirmation
                    example: '123456'
    responses:
      200:
        description: Newly created user.
        content:
          application/json:
            schema:
              $ref: "#/definitions/schemas/User"
      422:
        description: Validation errors.
        example:
          message: Hello Guess (temporary)
